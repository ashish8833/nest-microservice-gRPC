// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.0.3
//   protoc               v5.27.3
// source: user.proto

/* eslint-disable */
import { GrpcMethod, GrpcStreamMethod } from "@nestjs/microservices";
import { Observable } from "rxjs";

export const protobufPackage = "user";

export interface User {
  uuid: string;
  firstName: string;
  lastName: string;
  email: string;
  gender: string;
  addressFirstLine: string;
  addressSecondLine: string;
  isActive: boolean;
}

export interface Pagination {
  page?: number | undefined;
  size?: number | undefined;
  search?: string | undefined;
}

export interface Users {
  users: User[];
}

export const USER_PACKAGE_NAME = "user";

export interface UserServiceClient {
  getUsers(request: Pagination): Observable<Users>;
}

export interface UserServiceController {
  getUsers(request: Pagination): Promise<Users> | Observable<Users> | Users;
}

export function UserServiceControllerMethods() {
  return function (constructor: Function) {
    const grpcMethods: string[] = ["getUsers"];
    for (const method of grpcMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcMethod("UserService", method)(constructor.prototype[method], method, descriptor);
    }
    const grpcStreamMethods: string[] = [];
    for (const method of grpcStreamMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcStreamMethod("UserService", method)(constructor.prototype[method], method, descriptor);
    }
  };
}

export const USER_SERVICE_NAME = "UserService";
